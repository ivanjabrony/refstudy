definitions:
  dto.BadResponseDto:
    properties:
      error:
        example: Server error
        type: string
    type: object
  dto.CreateUserDto:
    properties:
      email:
        example: 123@example.com
        type: string
      password:
        example: "12345678"
        type: string
      username:
        example: Ivan
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.PaginatedUsersDto:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.UserDto'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  dto.UpdateUserDto:
    properties:
      email:
        example: 123@example.com
        type: string
      id:
        example: 1
        type: integer
      password:
        example: "12345678"
        type: string
      username:
        example: Ivan
        type: string
    required:
    - id
    type: object
  dto.UserDto:
    properties:
      email:
        example: 123@example.com
        type: string
      id:
        example: 1
        type: integer
      password:
        example: "12345678"
        type: string
      username:
        example: Ivan
        type: string
    type: object
info:
  contact: {}
  description: Refstude managing API
  title: Refstudy API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: returning users with pagination
      parameters:
      - default: 1
        description: Page number (starting from 1)
        in: query
        name: page
        type: integer
      - default: 10
        description: Amount of items on the page
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PaginatedUsersDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BadResponseDto'
      summary: Get all users with pagination
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Creates new user
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDto'
      produces:
      - application/json
      responses:
        "204":
          description: Creating Success
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BadResponseDto'
      summary: Create user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Updates existing user
      parameters:
      - description: Updated data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDto'
      produces:
      - application/json
      responses:
        "204":
          description: Update success
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BadResponseDto'
      summary: Update user
      tags:
      - user
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Delete success
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BadResponseDto'
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: returning user
      parameters:
      - description: ID of user
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.BadResponseDto'
      summary: Get user by ID
      tags:
      - user
swagger: "2.0"
